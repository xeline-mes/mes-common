apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'checkstyle'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

buildscript {
    ext {
        springBootVersion = '1.3.5.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/libs-release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
    }

    dependencies {
       classpath("io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE")
       classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-release" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/snapshot" }
}

ext {
    commonsPoolVersion = '2.4.2'
    nettyVersion = '4.0.33.Final'
    reactorVersion = '2.0.7.RELEASE'
    redisVersion = '0.6'
    springSessionVersion = '1.1.0.M1'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-redis")
    
    compile("org.springframework.security:spring-security-messaging")
    compile("org.springframework.session:spring-session:$springSessionVersion")
    compile("org.apache.commons:commons-pool2:$commonsPoolVersion")
    compile("com.github.kstyrc:embedded-redis:$redisVersion")
    compile("io.projectreactor:reactor-core:${reactorVersion}")
    compile("io.projectreactor:reactor-net:${reactorVersion}") {
        exclude group: "io.netty", module: "netty-all"
    }
    compile("io.netty:netty-all:$nettyVersion")
    compile("joda-time:joda-time:2.8.1")
    compile("org.apache.httpcomponents:httpcore:4.4.6")
    compile("org.apache.httpcomponents:httpclient:4.5.3")
    compile("org.apache.httpcomponents:httpmime:4.5.3")
    compile("org.hibernate:hibernate-validator:5.4.1.Final")
    compile("org.eclipse.persistence:javax.persistence:2.1.1")
    compile("org.apache.struts:struts2-core:2.5.10.1")
    compile("org.nutz:nutz:1.r.61")
    compile("org.jsoup:jsoup:1.10.2")
    compile("javax.inject:javax.inject:1")
    
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

// task wrapper(type: Wrapper) {
//    gradleVersion = '2.0'
//}

task dist(dependsOn: assemble) {
        group = 'Distribution'
        description = 'Builds -dist, -docs distribution archives.'
}

